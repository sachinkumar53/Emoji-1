package com.vanniktech.emoji.googlecompat;

import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;
import android.graphics.PixelFormat;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.support.text.emoji.EmojiCompat;
import android.support.text.emoji.EmojiSpan;
import android.text.Spanned;
import android.text.TextPaint;

/**
 * An emoji drawable backed by a span generated by the Google emoji support library.
 */
public class CompatEmojiDrawable extends Drawable {
    EmojiSpan emojiSpan;
    CharSequence processed;
    TextPaint textPaint = new TextPaint();

    public CompatEmojiDrawable(String unicode) {
        processed = EmojiCompat.get().process(unicode.length() == 1 ? unicode + "\ufe0f" : unicode);
        if (processed instanceof Spanned) {
            Object[] spans = ((Spanned) processed).getSpans(0, unicode.length(), EmojiSpan.class);
            if (spans.length > 0) {
                emojiSpan = (EmojiSpan) spans[0];
            }
        }
        textPaint.setStyle(Paint.Style.FILL);
        textPaint.setColor(0x0ffffffff);
    }

    @Override
    public void draw(Canvas canvas) {
        Rect bounds = getBounds();
        textPaint.setTextSize(bounds.height() * 0.8f);
        int y = Math.round(bounds.bottom - bounds.height() * 0.225f);

        if (emojiSpan == null) {
            canvas.drawText(processed, 0, processed.length(), bounds.left, y, textPaint);
        } else {
            emojiSpan.draw(canvas, processed, 0, processed.length(), bounds.left /* x */, bounds.top /* top */, y /* y */, bounds.bottom /* bottom */, textPaint);
        }
    }

    @Override
    public void setAlpha(int i) {
        textPaint.setAlpha(i);
    }

    @Override
    public void setColorFilter(ColorFilter colorFilter) {
        textPaint.setColorFilter(colorFilter);
    }

    @Override
    public int getOpacity() {
        return PixelFormat.UNKNOWN;
    }
}
